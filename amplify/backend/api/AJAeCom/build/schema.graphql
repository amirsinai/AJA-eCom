
type Wishlist @aws_iam @aws_api_key {
  id: ID!
  itemLink: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Reviews @aws_iam @aws_api_key {
  id: ID!
  productsID: ID!
  Rating: Float!
  Comment: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Products @aws_iam @aws_api_key {
  id: ID!
  Name: String!
  Desc: String!
  Image: String
  Price: Float!
  Reviews(filter: ModelReviewsFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelReviewsConnection
  Rating: [AWSJSON]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelWishlistConnection @aws_api_key @aws_iam {
  items: [Wishlist]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelWishlistFilterInput {
  id: ModelIDInput
  itemLink: ModelStringInput
  and: [ModelWishlistFilterInput]
  or: [ModelWishlistFilterInput]
  not: ModelWishlistFilterInput
}

type Query {
  getWishlist(id: ID!): Wishlist @aws_api_key @aws_iam
  listWishlists(filter: ModelWishlistFilterInput, limit: Int, nextToken: String): ModelWishlistConnection @aws_api_key @aws_iam
  syncWishlists(filter: ModelWishlistFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelWishlistConnection @aws_api_key @aws_iam
  getReviews(id: ID!): Reviews @aws_api_key @aws_iam
  listReviews(filter: ModelReviewsFilterInput, limit: Int, nextToken: String): ModelReviewsConnection @aws_api_key @aws_iam
  syncReviews(filter: ModelReviewsFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelReviewsConnection @aws_api_key @aws_iam
  getProducts(id: ID!): Products @aws_api_key @aws_iam
  listProducts(filter: ModelProductsFilterInput, limit: Int, nextToken: String): ModelProductsConnection @aws_api_key @aws_iam
  syncProducts(filter: ModelProductsFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelProductsConnection @aws_api_key @aws_iam
}

input ModelWishlistConditionInput {
  itemLink: ModelStringInput
  and: [ModelWishlistConditionInput]
  or: [ModelWishlistConditionInput]
  not: ModelWishlistConditionInput
}

input CreateWishlistInput {
  id: ID
  itemLink: String
  _version: Int
}

input UpdateWishlistInput {
  id: ID!
  itemLink: String
  _version: Int
}

input DeleteWishlistInput {
  id: ID!
  _version: Int
}

type Mutation {
  createWishlist(input: CreateWishlistInput!, condition: ModelWishlistConditionInput): Wishlist @aws_api_key @aws_iam
  updateWishlist(input: UpdateWishlistInput!, condition: ModelWishlistConditionInput): Wishlist @aws_api_key @aws_iam
  deleteWishlist(input: DeleteWishlistInput!, condition: ModelWishlistConditionInput): Wishlist @aws_api_key @aws_iam
  createReviews(input: CreateReviewsInput!, condition: ModelReviewsConditionInput): Reviews @aws_api_key @aws_iam
  updateReviews(input: UpdateReviewsInput!, condition: ModelReviewsConditionInput): Reviews @aws_api_key @aws_iam
  deleteReviews(input: DeleteReviewsInput!, condition: ModelReviewsConditionInput): Reviews @aws_api_key @aws_iam
  createProducts(input: CreateProductsInput!, condition: ModelProductsConditionInput): Products @aws_api_key @aws_iam
  updateProducts(input: UpdateProductsInput!, condition: ModelProductsConditionInput): Products @aws_api_key @aws_iam
  deleteProducts(input: DeleteProductsInput!, condition: ModelProductsConditionInput): Products @aws_api_key @aws_iam
}

type Subscription {
  onCreateWishlist: Wishlist @aws_subscribe(mutations: ["createWishlist"]) @aws_api_key @aws_iam
  onUpdateWishlist: Wishlist @aws_subscribe(mutations: ["updateWishlist"]) @aws_api_key @aws_iam
  onDeleteWishlist: Wishlist @aws_subscribe(mutations: ["deleteWishlist"]) @aws_api_key @aws_iam
  onCreateReviews: Reviews @aws_subscribe(mutations: ["createReviews"]) @aws_api_key @aws_iam
  onUpdateReviews: Reviews @aws_subscribe(mutations: ["updateReviews"]) @aws_api_key @aws_iam
  onDeleteReviews: Reviews @aws_subscribe(mutations: ["deleteReviews"]) @aws_api_key @aws_iam
  onCreateProducts: Products @aws_subscribe(mutations: ["createProducts"]) @aws_api_key @aws_iam
  onUpdateProducts: Products @aws_subscribe(mutations: ["updateProducts"]) @aws_api_key @aws_iam
  onDeleteProducts: Products @aws_subscribe(mutations: ["deleteProducts"]) @aws_api_key @aws_iam
}

type ModelReviewsConnection @aws_api_key @aws_iam {
  items: [Reviews]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelReviewsFilterInput {
  id: ModelIDInput
  productsID: ModelIDInput
  Rating: ModelFloatInput
  Comment: ModelStringInput
  and: [ModelReviewsFilterInput]
  or: [ModelReviewsFilterInput]
  not: ModelReviewsFilterInput
}

input ModelReviewsConditionInput {
  productsID: ModelIDInput
  Rating: ModelFloatInput
  Comment: ModelStringInput
  and: [ModelReviewsConditionInput]
  or: [ModelReviewsConditionInput]
  not: ModelReviewsConditionInput
}

input CreateReviewsInput {
  id: ID
  productsID: ID!
  Rating: Float!
  Comment: String
  _version: Int
}

input UpdateReviewsInput {
  id: ID!
  productsID: ID
  Rating: Float
  Comment: String
  _version: Int
}

input DeleteReviewsInput {
  id: ID!
  _version: Int
}

type ModelProductsConnection @aws_api_key @aws_iam {
  items: [Products]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelProductsFilterInput {
  id: ModelIDInput
  Name: ModelStringInput
  Desc: ModelStringInput
  Image: ModelStringInput
  Price: ModelFloatInput
  Rating: ModelStringInput
  and: [ModelProductsFilterInput]
  or: [ModelProductsFilterInput]
  not: ModelProductsFilterInput
}

input ModelProductsConditionInput {
  Name: ModelStringInput
  Desc: ModelStringInput
  Image: ModelStringInput
  Price: ModelFloatInput
  Rating: ModelStringInput
  and: [ModelProductsConditionInput]
  or: [ModelProductsConditionInput]
  not: ModelProductsConditionInput
}

input CreateProductsInput {
  id: ID
  Name: String!
  Desc: String!
  Image: String
  Price: Float!
  Rating: [AWSJSON]
  _version: Int
}

input UpdateProductsInput {
  id: ID!
  Name: String
  Desc: String
  Image: String
  Price: Float
  Rating: [AWSJSON]
  _version: Int
}

input DeleteProductsInput {
  id: ID!
  _version: Int
}

